voom.y.d <- voom(d, mm, plot = T)
fit <- lmFit(voom.y.d, mm)
coef.fit <- coef(fit)
head(coef(fit))
# An example on how to use make contrast
x <- c("B-A","C-B","C-A")
makeContrasts(contrasts=x,levels=c("A","B","C"))
contr <- makeContrasts(groupI5.9 - groupI5.6, levels = colnames(coef(fit)))
contr
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 5)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>% filter(adj.P.Val <0.05)
head(DEGs)
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "time9_v_time6_I5.txt", row.names = F, sep = "\t", quote = F)
contr <- makeContrasts(groupI5.6 - groupC.6, levels = colnames(coef(fit)))
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 20)
length(which(top.table$adj.P.Val < 0.05)) # number of DE genes
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "I5_v_C_time6.txt", row.names = F, sep = "\t", quote = F)
View(top.table)
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "time9_v_time6_I5.txt", row.names = F, sep = "\t", quote = F)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>% filter(adj.P.Val <0.05)
head(DEGs)
snames <- colnames(counts) # Sample names
snames
cultivar <- substr(snames, 1, nchar(snames) - 2)
time <- substr(snames, nchar(snames) - 1, nchar(snames) - 1)
cultivar
snames <- colnames(counts) # Sample names
cultivar <- substr(snames, 1, nchar(snames) - 2)
time <- substr(snames, nchar(snames) - 1, nchar(snames) - 1)
cultivar
time
group <- interaction(cultivar, time)
group
library(factoextra)
library(FactoMineR)
pca.raw.d <- log2(d$counts+0.5)
pca.d <- PCA(t(pca.raw.d),graph = F)
fviz_pca_ind(pca.d, col.ind = group)
library(pheatmap)
mm <- model.matrix(~0 + group)
pheatmap(mm[,-1],cluster_rows = FALSE,cluster_cols = FALSE)
group
voom.y.d <- voom(d, mm, plot = T)
contr <- makeContrasts(groupI5.9 - groupI5.6, levels = colnames(coef(fit)))
contr
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 5)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>% filter(adj.P.Val <0.05)
head(DEGs)
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "time9_v_time6_I5.txt", row.names = F, sep = "\t", quote = F)
contr <- makeContrasts(groupI5.6 - groupC.6, levels = colnames(coef(fit)))
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 20)
length(which(top.table$adj.P.Val < 0.05)) # number of DE genes
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "I5_v_C_time6.txt", row.names = F, sep = "\t", quote = F)
knitr::opts_chunk$set(echo = TRUE)
# Based on #https://ucdavis-bioinformatics-training.github.io/2018-June-RNA-Seq-Workshop/thursday/DE.html
# PSA, don't use single variable object name
plot(top.table$logFC)
plot(top.table$logFC,col=P.Value)
plot(top.table$logFC,col=top.table$P.Value)
plot(top.table$logFC)
abline(y=1)
plot(top.table$logFC)
abline(y=1)
abline(h=1()
plot(top.table$logFC)
plot(top.table$logFC)
abline(h=1)
abline(h=-1)
hist(top.table$logFC)
abline(h=1)
abline(h=-1)
plot(top.table$logFC)
abline(h=1)
abline()
plot(top.table$logFC)
abline(h=1)
abline(h=-1)
ggplot(top.table, aes(y=logFC)) + geom_jitter()
ggplot(top.table, aes(x=adj.P.Val,y=logFC)) + geom_jitter()
ggplot(top.table, aes(x=adj.P.Val,y=logFC)) +
geom_jitter(col = adj.P.Val)
ggplot(top.table, aes(x=adj.P.Val,y=logFC)) +
geom_jitter(aes(col = adj.P.Val))
ggplot(top.table, aes(y=adj.P.Val,x=logFC)) +
geom_jitter(aes(col = adj.P.Val))
top.table %>%
filter(adj.P.Val < 0.05) %>%
ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val))
top.table %>%
filter(adj.P.Val < 0.05) %>%
ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val)) +
geom_text(aes(label=genes), size=3)
top.table %>%
filter(adj.P.Val < 0.05) %>%
ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val)) +
geom_text(label=rownames(top.table), size=3)
rownames(top.table)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val)) +
geom_text(label=rownames(p_data), size=3)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val)) +
geom_text(label=rownames(p_data), size=1)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val)) +
geom_text(label=rownames(p_data), size=2)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val),size=0) +
geom_text(label=rownames(p_data), size=2)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val),size=0) +
geom_text(label=rownames(p_data), size=2) +ggrepel::geom_label_repel()
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val),size=0) +
geom_text(label=rownames(p_data), size=2)
ggrepel::geom_text_repel()
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val),size=0) +
ggrepel::geom_text_repel()+
geom_text(label=rownames(p_data), size=2)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val),size=0) +
geom_text(label=rownames(p_data), size=2) +
ggrepel::geom_text_repel()
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val),size=0) +
geom_text(label=rownames(p_data), size=2)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val),size=0) +
geom_text(label=rownames(p_data), size=2.5)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(aes(col = adj.P.Val),size=0) +
geom_text(label=rownames(p_data), size=2.5,alpha=0.5)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_jitter(size=0) +
geom_text(label=rownames(p_data), size=2.5,alpha=0.7)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_text(label=rownames(p_data), size=2.5,alpha=0.7)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(y=adj.P.Val,x  =logFC)) +
geom_text(label=rownames(p_data), size=2.5,alpha=0.7)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(x=adj.P.Val,y=logFC)) +
geom_text(label=rownames(p_data), size=2.5,alpha=0.7)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(x=adj.P.Val,y=logFC)) +
geom_text(label=rownames(p_data), size=4.0,alpha=0.7)
d0 <- DGEList(counts)
d0 <- calcNormFactors(d0)
View(d0)
d0 <- DGEList(counts)
View(d0)
d0[["samples"]]
d0 <- calcNormFactors(d0)
cutoff <- 1
drop <- which(apply(cpm(d0),1, max) < cutoff)
d <- d0[-drop,]
dim(d) # number of genes left
d0[["samples"]]
apply(cpm(d0),1,max)
View(d)
View(d0)
View(d)
snames <- colnames(counts) # Sample names
cultivar <- substr(snames, 1, nchar(snames) - 2)
time <- substr(snames, nchar(snames) - 1, nchar(snames) - 1)
cultivar
snames <- colnames(counts) # Sample names
cultivar <- substr(snames, 1, nchar(snames) - 2)
time <- substr(snames, nchar(snames) - 1, nchar(snames) - 1)
cultivar
time
group <- interaction(cultivar, time)
group
plotMDS(d, col = as.numeric(group))
library(pheatmap)
mm <- model.matrix(~ 0 + group)
pheatmap(mm[,-1],cluster_rows = FALSE,cluster_cols = FALSE)
mm <- model.matrix(~ 0 + group)
View(mm)
library(pheatmap)
mm <- model.matrix(~ 0 + group)
pheatmap(mm,cluster_rows = FALSE,cluster_cols = FALSE)
voom.y.d <- voom(d, mm, plot = T)
fit <- lmFit(voom.y.d, mm)
coef.fit <- coef(fit)
head(coef(fit))
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG$log2FC <- top.table$logFC
coef_DEG[,c(5,2)]
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG$log2FC <- top.table$logFC
coef_DEG[,c(5,2,6)]
View(coef_DEG)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2,)]
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 5)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
View(fit)
fit
fit$stdev.unscaled
fit$design
fit <- lmFit(voom.y.d, mm)
coef.fit <- fit$coefficients
head(coef(fit))
View(coef_DEG)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>% filter(adj.P.Val <0.05)
head(DEGs)
DEGs <- top.table %>% filter(adj.P.Val <0.05) %>% order_by(logFC)
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>% filter(adj.P.Val <0.05) %>% order_by(logFC)
View(top.table)
DEGs <- top.table %>% order_by(logFC) %>% filter(adj.P.Val <0.05)
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>%  arrange(logFC) %>% filter(adj.P.Val <0.05)
head(DEGs)
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "time9_v_time6_I5.txt", row.names = F, sep = "\t", quote = F)
contr <- makeContrasts(groupI5.6 - groupC.6, levels = colnames(coef(fit)))
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 20)
length(which(top.table$adj.P.Val < 0.05)) # number of DE genes
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "I5_v_C_time6.txt", row.names = F, sep = "\t", quote = F)
contr <- makeContrasts(groupI5.6 - groupC.6, levels = colnames(coef(fit)))
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
length(which(top.table$adj.P.Val < 0.05)) # number of DE genes
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "I5_v_C_time6.txt", row.names = F, sep = "\t", quote = F)
head(top.table,20)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(x=adj.P.Val,y=logFC)) +
geom_text(label=rownames(p_data), size=4.0,alpha=0.7)
View(counts)
d0 <- DGEList(counts)
d0 <- calcNormFactors(d0)
cutoff <- 1
drop <- which(apply(cpm(d0),1,max) < cutoff)
d <- d0[-drop,]
dim(d) # number of genes left
snames <- colnames(counts) # Sample names
cultivar <- substr(snames, 1, nchar(snames) - 2)
time <- substr(snames, nchar(snames) - 1, nchar(snames) - 1)
cultivar
time
time
group <- interaction(cultivar, time)
group
plotMDS(d, col = as.numeric(group))
fit <- lmFit(voom.y.d, mm)
coef.fit <- fit$coefficients
head(coef(fit))
contr <- makeContrasts(groupI5.9 - groupI5.6, levels = colnames(coef(fit)))
contr
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 5)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>%  arrange(logFC) %>% filter(adj.P.Val <0.05)
head(DEGs)
View(DEGs)
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "time9_v_time6_I5.txt", row.names = F, sep = "\t", quote = F)
contr <- makeContrasts(groupI5.6 - groupC.6, levels = colnames(coef(fit)))
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
length(which(top.table$adj.P.Val < 0.05)) # number of DE genes
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "I5_v_C_time6.txt", row.names = F, sep = "\t", quote = F)
head(top.table,20)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(x=adj.P.Val,y=logFC)) +
geom_text(label=rownames(p_data), size=4.0,alpha=0.7)
knitr::opts_chunk$set(echo = TRUE)
# Based on #https://ucdavis-bioinformatics-training.github.io/2018-June-RNA-Seq-Workshop/thursday/DE.html
# PSA, don't use single variable object name
counts <-
read.delim("https://raw.githubusercontent.com/ucdavis-bioinformatics-training/2018-June-RNA-Seq-Workshop/master/thursday/all_counts.txt")
head(counts)
View(contrast.matrix)
View(counts)
d0 <- DGEList(counts)
d0 <- calcNormFactors(d0)
cutoff <- 1
drop <- which(apply(cpm(d0),1,max) < cutoff)
d <- d0[-drop,]
dim(d) # number of genes left
snames <- colnames(counts) # Sample names
cultivar <- substr(snames, 1, nchar(snames) - 2)
time <- substr(snames, nchar(snames) - 1, nchar(snames) - 1)
cultivar
time
group <- interaction(cultivar, time)
group
plotMDS(d, col = as.numeric(group))
library(factoextra)
library(FactoMineR)
pca.raw.d <- log2(d$counts+0.5)
pca.d <- PCA(t(pca.raw.d),graph = F)
fviz_pca_ind(pca.d, col.ind = group)
library(pheatmap)
mm <- model.matrix(~ 0 + group)
pheatmap(mm,cluster_rows = FALSE,cluster_cols = FALSE)
voom.y.d <- voom(d, mm, plot = T)
fit <- lmFit(voom.y.d, mm)
coef.fit <- fit$coefficients
head(coef(fit))
# An example on how to use make contrast
x <- c("B-A","C-B","C-A")
makeContrasts(contrasts=x,levels=c("A","B","C"))
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 5)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
voom.y.d <- voom(d, mm, plot = T)
fit <- lmFit(voom.y.d, mm)
coef.fit <- fit$coefficients
head(coef(fit))
# An example on how to use make contrast
x <- c("B-A","C-B","C-A")
makeContrasts(contrasts=x,levels=c("A","B","C"))
contr <- makeContrasts(groupI5.9 - groupI5.6, levels = colnames(coef(fit)))
contr
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 5)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
contr <- makeContrasts(groupI5.9 - groupI5.6, levels = colnames(coef(fit)))
contr
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 5)
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>%  arrange(logFC) %>% filter(adj.P.Val <0.05)
head(DEGs)
View(DEGs)
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "time9_v_time6_I5.txt", row.names = F, sep = "\t", quote = F)
contr <- makeContrasts(groupI5.6 - groupC.6, levels = colnames(coef(fit)))
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
length(which(top.table$adj.P.Val < 0.05)) # number of DE genes
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "I5_v_C_time6.txt", row.names = F, sep = "\t", quote = F)
head(top.table,20)
knitr::opts_chunk$set(echo = TRUE)
# Based on #https://ucdavis-bioinformatics-training.github.io/2018-June-RNA-Seq-Workshop/thursday/DE.html
# PSA, don't use single variable object name
library(edgeR)
library(limma)
counts <-
read.delim("https://raw.githubusercontent.com/ucdavis-bioinformatics-training/2018-June-RNA-Seq-Workshop/master/thursday/all_counts.txt")
head(counts)
d0 <- DGEList(counts)
d0 <- calcNormFactors(d0)
cutoff <- 1
drop <- which(apply(cpm(d0),1,max) < cutoff)
d <- d0[-drop,]
dim(d) # number of genes left
snames <- colnames(counts) # Sample names
cultivar <- substr(snames, 1, nchar(snames) - 2)
time <- substr(snames, nchar(snames) - 1, nchar(snames) - 1)
cultivar
time
group <- interaction(cultivar, time)
group
plotMDS(d, col = as.numeric(group))
library(factoextra)
library(FactoMineR)
pca.raw.d <- log2(d$counts+0.5)
pca.d <- PCA(t(pca.raw.d),graph = F)
fviz_pca_ind(pca.d, col.ind = group)
library(pheatmap)
mm <- model.matrix(~ 0 + group)
pheatmap(mm,cluster_rows = FALSE,cluster_cols = FALSE)
voom.y.d <- voom(d, mm, plot = T)
fit <- lmFit(voom.y.d, mm)
coef.fit <- fit$coefficients
head(coef(fit))
# An example on how to use make contrast
x <- c("B-A","C-B","C-A")
makeContrasts(contrasts=x,levels=c("A","B","C"))
contr <- makeContrasts(groupI5.9 - groupI5.6, levels = colnames(coef(fit)))
contr
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 5)
#compared to coef
coef_DEG <- coef.fit[rownames(coef.fit) %in% rownames(top.table)[1:5],]
coef_DEG[,c(5,2)]
length(which(top.table$adj.P.Val < 0.05))
library(dplyr)
DEGs <- top.table %>%  arrange(logFC) %>% filter(adj.P.Val <0.05)
head(DEGs)
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "time9_v_time6_I5.txt", row.names = F, sep = "\t", quote = F)
contr <- makeContrasts(groupI5.6 - groupC.6, levels = colnames(coef(fit)))
tmp <- contrasts.fit(fit, contr)
tmp <- eBayes(tmp)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
length(which(top.table$adj.P.Val < 0.05)) # number of DE genes
top.table$Gene <- rownames(top.table)
top.table <- top.table[,c("Gene", names(top.table)[1:6])]
write.table(top.table, file = "I5_v_C_time6.txt", row.names = F, sep = "\t", quote = F)
head(top.table,20)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(x=adj.P.Val,y=logFC)) +
geom_text(label=rownames(p_data), size=4.0,alpha=0.7)
p_data <-   top.table %>% filter(adj.P.Val < 0.05)
p_data %>%  ggplot(aes(x=adj.P.Val,y=logFC)) +
geom_text(label=rownames(p_data), size=4.0,alpha=0.7, aes(col=AveExpr))
plotMDS(d, col = as.numeric(group),cex = 1.1)
plotMDS(d, col = as.numeric(group),cex = 1.5)
plotMDS(d, col = as.numeric(group),cex = 1.4)
plotMDS(d, col = as.numeric(group),cex = 1.5)
